// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Sockets.PatientItem = (function(superClass) {
    extend(PatientItem, superClass);

    function PatientItem() {
      return PatientItem.__super__.constructor.apply(this, arguments);
    }

    PatientItem.prototype.tagName = 'li';

    PatientItem.prototype.template = templates.get(['patient_item.html']);

    PatientItem.prototype.initialize = function(options) {
      this.parent = options.parent;
      this._render();
      return this._position();
    };

    PatientItem.prototype.events = {
      'click .delete': 'delete'
    };

    PatientItem.prototype["delete"] = function() {
      console.log(this.model);
      return socket.emit('delete', {
        id: "" + this.model.id
      });
    };

    PatientItem.prototype._render = function() {
      return this.$el.html(this.template(this.model.toJSON()));
    };

    PatientItem.prototype._position = function() {
      return this.parent.$patient_list.append(this.el);
    };

    return PatientItem;

  })(Backbone.View);

}).call(this);
