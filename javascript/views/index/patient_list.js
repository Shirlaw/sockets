// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Sockets.PatientList = (function(superClass) {
    extend(PatientList, superClass);

    function PatientList() {
      return PatientList.__super__.constructor.apply(this, arguments);
    }

    PatientList.prototype.template = templates.get(['patient_list.html']);

    PatientList.prototype.initialize = function(options) {
      return this.listenTo(this.collection, 'reset', function() {
        this._render_list();
        this._render_all();
        return this._position();
      });
    };

    PatientList.prototype._render_list = function() {
      this.$el.html(this.template());
      return this.$patient_list = this.$('ul.patient_list');
    };

    PatientList.prototype._render_all = function() {
      return this.collection.each((function(_this) {
        return function(model) {
          return _this.view = new Sockets.PatientItem({
            model: model,
            parent: _this
          });
        };
      })(this));
    };

    PatientList.prototype._position = function() {
      return $('#app').html(this.el);
    };

    return PatientList;

  })(Backbone.View);

}).call(this);
